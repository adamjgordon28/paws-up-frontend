{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/containers/PetPage.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PetContainer from './PetContainer.js';\nimport PetProfile from '../components/PetProfile.js';\nimport Filter from '../components/Filter.js';\n\nclass PetPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pets: [],\n      selectedPetId: null,\n      animalFilter: null,\n      sizeFilter: null,\n      sexFilter: null\n    };\n\n    this.setAnimalFilter = value => {\n      this.setState({\n        animalFilter: value\n      });\n    };\n\n    this.setSizeFilter = value => {\n      this.setState({\n        sizeFilter: value\n      });\n    };\n\n    this.setSexFilter = value => {\n      this.setState({\n        sexFilter: value\n      });\n    };\n\n    this.filterPets = array => {\n      let firstArray;\n      let secondArray;\n      let finalArray;\n\n      if (this.state.animalFilter) {\n        let animalFilteredPets = array.filter(pet => {\n          return pet.animal === this.state.animalFilter;\n        });\n        firstArray = animalFilteredPets;\n      } else {\n        firstArray = array;\n      }\n\n      if (this.state.sizeFilter) {\n        let sizeFilteredPets = firstArray.filter(pet => {\n          return pet.size === this.state.sizeFilter;\n        });\n        secondArray = sizeFilteredPets;\n      } else {\n        secondArray = firstArray;\n      }\n\n      if (this.state.sexFilter) {\n        let sexFilteredPets = secondArray.filter(pet => {\n          return pet.sex === this.state.sexFilter;\n        });\n        finalArray = sexFilteredPets;\n      } else {\n        finalArray = secondArray;\n      }\n\n      return finalArray;\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage.token) {\n      alert(\"You must be logged in to view this page!\");\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.selectedPetId ? React.createElement(PetProfile, {\n      fetchAndSetAdopters: this.props.fetchAndSetAdopters,\n      currentUser: this.props.currentUser,\n      pet: this.findPet(this.state.selectedPetId),\n      fetchPets: this.fetchPets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      setAnimalFilter: this.setAnimalFilter,\n      setSizeFilter: this.setSizeFilter,\n      setSexFilter: this.setSexFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(PetContainer, {\n      pets: this.filterPets(this.props.pets),\n      setSelectedPet: this.setSelectedPet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \" \"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    pets: state.pets\n  };\n};\n\nexport default connect(mapStateToProps)(PetPage);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/containers/PetPage.js"],"names":["React","Fragment","connect","PetContainer","PetProfile","Filter","PetPage","Component","state","pets","selectedPetId","animalFilter","sizeFilter","sexFilter","setAnimalFilter","value","setState","setSizeFilter","setSexFilter","filterPets","array","firstArray","secondArray","finalArray","animalFilteredPets","filter","pet","animal","sizeFilteredPets","size","sexFilteredPets","sex","componentDidMount","localStorage","token","alert","props","history","push","render","fetchAndSetAdopters","currentUser","findPet","fetchPets","setSelectedPet","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport PetContainer from './PetContainer.js';\nimport PetProfile from '../components/PetProfile.js';\nimport Filter from '../components/Filter.js';\n\nclass PetPage extends React.Component {\n\n  state = {\n    pets: [],\n    selectedPetId: null,\n    animalFilter: null,\n    sizeFilter: null,\n    sexFilter: null\n  }\n\n\n  setAnimalFilter = (value) => {\n    this.setState({\n      animalFilter: value\n    })\n  }\n\n  setSizeFilter = (value) => {\n    this.setState({\n      sizeFilter: value\n    })\n  }\n\n  setSexFilter = (value) => {\n    this.setState({\n      sexFilter: value\n    })\n  }\n\n\n\n  filterPets = (array) => {\n    let firstArray;\n    let secondArray;\n    let finalArray;\n    if (this.state.animalFilter){\n      let animalFilteredPets = array.filter((pet)=>{\n        return pet.animal === this.state.animalFilter\n      })\n      firstArray = animalFilteredPets\n    }\n    else {\n      firstArray = array\n    }\n    if (this.state.sizeFilter){\n      let sizeFilteredPets = firstArray.filter((pet)=>{\n        return pet.size === this.state.sizeFilter\n      })\n      secondArray = sizeFilteredPets\n    }\n    else {\n      secondArray = firstArray\n    }\n    if (this.state.sexFilter){\n      let sexFilteredPets = secondArray.filter((pet)=>{\n        return pet.sex === this.state.sexFilter\n      })\n      finalArray = sexFilteredPets\n    }\n    else {\n       finalArray = secondArray\n    }\n    return finalArray\n  }\n\n\n\n  componentDidMount(){\n    if(!localStorage.token) {\n      alert (\"You must be logged in to view this page!\")\n      this.props.history.push(\"/login\")\n    }\n  }\n\n\n\n\n  render(){\n  return (\n    <Fragment>\n    {this.state.selectedPetId ?\n\n      <PetProfile fetchAndSetAdopters= {this.props.fetchAndSetAdopters} currentUser= {this.props.currentUser} pet = {this.findPet(this.state.selectedPetId)} fetchPets={this.fetchPets}/>\n\n    : <Fragment><Filter setAnimalFilter ={this.setAnimalFilter} setSizeFilter ={this.setSizeFilter} setSexFilter ={this.setSexFilter}/><PetContainer pets = {this.filterPets(this.props.pets)} setSelectedPet = {this.setSelectedPet}/> </Fragment>}\n\n\n\n    </Fragment>\n  )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    pets: state.pets\n  }\n}\n\nexport default connect(mapStateToProps)(PetPage)\n"]},"metadata":{},"sourceType":"module"}