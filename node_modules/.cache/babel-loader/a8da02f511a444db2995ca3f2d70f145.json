{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/containers/PetPage.js\";\nimport React, { Fragment } from 'react';\nimport PetContainer from './PetContainer.js';\nimport PetProfile from '../components/PetProfile.js';\nimport Header from '../components/Header';\nimport Filter from '../components/Filter.js';\nimport './PetPage.css';\nimport { fetchPets } from '../actions/pet';\nimport { connect } from 'react-redux';\n\nclass PetPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedPetId: null,\n      animalFilter: null,\n      sizeFilter: null,\n      sexFilter: null\n    };\n\n    this.setAnimalFilter = value => {\n      this.setState({\n        animalFilter: value\n      });\n    };\n\n    this.setSizeFilter = value => {\n      this.setState({\n        sizeFilter: value\n      });\n    };\n\n    this.setSexFilter = value => {\n      this.setState({\n        sexFilter: value\n      });\n    };\n\n    this.filterPets = array => {\n      let firstArray;\n      let secondArray;\n      let finalArray;\n\n      if (this.state.animalFilter) {\n        let animalFilteredPets = array.filter(pet => {\n          return pet.animal === this.state.animalFilter;\n        });\n        firstArray = animalFilteredPets;\n      } else {\n        firstArray = array;\n      }\n\n      if (this.state.sizeFilter) {\n        let sizeFilteredPets = firstArray.filter(pet => {\n          return pet.size === this.state.sizeFilter;\n        });\n        secondArray = sizeFilteredPets;\n      } else {\n        secondArray = firstArray;\n      }\n\n      if (this.state.sexFilter) {\n        let sexFilteredPets = secondArray.filter(pet => {\n          return pet.sex === this.state.sexFilter;\n        });\n        finalArray = sexFilteredPets;\n      } else {\n        finalArray = secondArray;\n      }\n\n      return finalArray;\n    };\n\n    this.setSelectedPet = pet => {\n      this.setState({\n        selectedPetId: pet.id\n      });\n    };\n\n    this.findPet = id => {\n      return this.props.pets.filter(p => p.id === id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPets();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.selectedPetId ? null : React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), this.state.selectedPetId ? React.createElement(PetProfile, {\n      fetchAndSetAdopters: this.props.fetchAndSetAdopters,\n      currentAdopter: this.props.currentAdopter,\n      pet: this.findPet(this.state.selectedPetId),\n      fetchPets: this.fetchPets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      setAnimalFilter: this.setAnimalFilter,\n      setSizeFilter: this.setSizeFilter,\n      setSexFilter: this.setSexFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(PetContainer, {\n      pets: this.filterPets(this.props.pets),\n      setSelectedPet: this.setSelectedPet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \" \"));\n  }\n\n}\n\nconst mapStateToProps = ({\n  petsReducer: {\n    pets: pets\n  }\n}) => ({\n  pets\n});\n\nexport default connect(mapStateToProps, {\n  fetchPets\n})(PetPage);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/containers/PetPage.js"],"names":["React","Fragment","PetContainer","PetProfile","Header","Filter","fetchPets","connect","PetPage","Component","state","selectedPetId","animalFilter","sizeFilter","sexFilter","setAnimalFilter","value","setState","setSizeFilter","setSexFilter","filterPets","array","firstArray","secondArray","finalArray","animalFilteredPets","filter","pet","animal","sizeFilteredPets","size","sexFilteredPets","sex","setSelectedPet","id","findPet","props","pets","p","componentDidMount","render","fetchAndSetAdopters","currentAdopter","mapStateToProps","petsReducer"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport PetContainer from './PetContainer.js'\nimport PetProfile from '../components/PetProfile.js'\nimport Header from '../components/Header'\nimport Filter from '../components/Filter.js'\nimport './PetPage.css'\n\nimport { fetchPets } from '../actions/pet'\nimport { connect } from 'react-redux'\n\n\nclass PetPage extends React.Component {\n\n  state = {\n    selectedPetId: null,\n    animalFilter: null,\n    sizeFilter: null,\n    sexFilter: null\n  }\n\n\n  setAnimalFilter = (value) => {\n    this.setState({\n      animalFilter: value\n    })\n  }\n\n  setSizeFilter = (value) => {\n    this.setState({\n      sizeFilter: value\n    })\n  }\n\n  setSexFilter = (value) => {\n    this.setState({\n      sexFilter: value\n    })\n  }\n\n\n\n  filterPets = (array) => {\n    let firstArray;\n    let secondArray;\n    let finalArray;\n    if (this.state.animalFilter){\n      let animalFilteredPets = array.filter((pet)=>{\n        return pet.animal === this.state.animalFilter\n      })\n      firstArray = animalFilteredPets\n    }\n    else {\n      firstArray = array\n    }\n    if (this.state.sizeFilter){\n      let sizeFilteredPets = firstArray.filter((pet)=>{\n        return pet.size === this.state.sizeFilter\n      })\n      secondArray = sizeFilteredPets\n    }\n    else {\n      secondArray = firstArray\n    }\n    if (this.state.sexFilter){\n      let sexFilteredPets = secondArray.filter((pet)=>{\n        return pet.sex === this.state.sexFilter\n      })\n      finalArray = sexFilteredPets\n    }\n    else {\n       finalArray = secondArray\n    }\n    return finalArray\n  }\n\n\n\n  componentDidMount(){\n    this.props.fetchPets()\n  }\n\n  setSelectedPet = (pet) => {\n    this.setState({\n      selectedPetId: pet.id\n    })\n  }\n\n  findPet = (id) => {\n    return this.props.pets.filter(p=>p.id === id)\n  }\n\n  render(){\n  return (\n\n    <div className=\"page\">\n    {this.state.selectedPetId? null: <Header/>}\n    {this.state.selectedPetId ?\n      <PetProfile\n      fetchAndSetAdopters= {this.props.fetchAndSetAdopters}\n      currentAdopter= {this.props.currentAdopter}\n      pet = {this.findPet(this.state.selectedPetId)} fetchPets={this.fetchPets}/>\n\n    : <Fragment><Filter setAnimalFilter ={this.setAnimalFilter} setSizeFilter ={this.setSizeFilter} setSexFilter ={this.setSexFilter}/><PetContainer pets = {this.filterPets(this.props.pets)} setSelectedPet = {this.setSelectedPet}/> </Fragment>}\n    </div>\n\n\n  )\n  }\n}\n\nconst mapStateToProps = ({ petsReducer: { pets: pets } }) => ({\n  pets\n})\n\nexport default connect(mapStateToProps,{fetchPets})(PetPage)\n"]},"metadata":{},"sourceType":"module"}