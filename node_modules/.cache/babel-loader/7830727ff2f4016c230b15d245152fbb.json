{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AutoControlledComponent as Component, childrenUtils, customPropTypes, getUnhandledProps, getElementType, META, useKeyOnly } from '../../lib';\nimport SidebarPushable from './SidebarPushable';\nimport SidebarPusher from './SidebarPusher';\n/**\n * A sidebar hides additional content beside a page.\n */\n\nvar Sidebar = function (_Component) {\n  _inherits(Sidebar, _Component);\n\n  function Sidebar() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Sidebar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Sidebar.__proto__ || Object.getPrototypeOf(Sidebar)).call.apply(_ref, [this].concat(args))), _this), _this.startAnimating = function () {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n      clearTimeout(_this.stopAnimatingTimer);\n\n      _this.setState({\n        animating: true\n      });\n\n      _this.stopAnimatingTimer = setTimeout(function () {\n        return _this.setState({\n          animating: false\n        });\n      }, duration);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Sidebar, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.visible !== this.props.visible) {\n        this.startAnimating();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          animation = _props.animation,\n          className = _props.className,\n          children = _props.children,\n          content = _props.content,\n          direction = _props.direction,\n          visible = _props.visible,\n          width = _props.width;\n      var animating = this.state.animating;\n      var classes = cx('ui', animation, direction, width, useKeyOnly(animating, 'animating'), useKeyOnly(visible, 'visible'), 'sidebar', className);\n      var rest = getUnhandledProps(Sidebar, this.props);\n      var ElementType = getElementType(Sidebar, this.props);\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childrenUtils.isNil(children) ? content : children);\n    }\n  }]);\n\n  return Sidebar;\n}(Component);\n\nSidebar.defaultProps = {\n  direction: 'left'\n};\nSidebar.autoControlledProps = ['visible'];\nSidebar._meta = {\n  name: 'Sidebar',\n  type: META.TYPES.MODULE\n};\nSidebar.Pushable = SidebarPushable;\nSidebar.Pusher = SidebarPusher;\nSidebar.handledProps = ['animation', 'as', 'children', 'className', 'content', 'defaultVisible', 'direction', 'visible', 'width'];\nSidebar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Animation style. */\n  animation: PropTypes.oneOf(['overlay', 'push', 'scale down', 'uncover', 'slide out', 'slide along']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initial value of visible. */\n  defaultVisible: PropTypes.bool,\n\n  /** Direction the sidebar should appear on. */\n  direction: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /** Controls whether or not the sidebar is visible on the page. */\n  visible: PropTypes.bool,\n\n  /** Sidebar width. */\n  width: PropTypes.oneOf(['very thin', 'thin', 'wide', 'very wide'])\n} : {};\nexport default Sidebar;","map":null,"metadata":{},"sourceType":"module"}