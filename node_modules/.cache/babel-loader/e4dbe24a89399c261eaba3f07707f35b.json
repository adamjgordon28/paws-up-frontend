{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/components/CreateMeetingCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass CreateMeetingCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      datetime: \"\",\n      location: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleClick = () => {\n      this.createMeeting();\n    };\n\n    this.createMeeting = () => {\n      fetch(\"http://localhost:4000/api/v1/meetings\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          adopter_id: this.props.currentUser.id,\n          pet_id: this.props.currentPet.id,\n          datetime: this.state.datetime,\n          location: this.state.location\n        })\n      }).then(res => res.json()).then(meeting => {\n        if (meeting.errors) {\n          alert(meeting.errors);\n        } else {\n          meeting.pet_img_url = this.props.currentPet.img_url;\n          meeting.pet = this.props.currentPet.name;\n          meeting.adopter_img_url = this.props.currentUser.img_url;\n          meeting.adopter = this.props.currentUser.name;\n          this.props.addMeetingToCurrentUser(meeting);\n          this.props.addMeetingToCurrentPet(meeting);\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        color: \"black\",\n        padding: \".25em\"\n      },\n      className: \"ui raised card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        margin: \"0.25em\"\n      },\n      onChange: this.handleChange,\n      required: true,\n      type: \"date\",\n      name: \"datetime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      style: {\n        margin: \"0.25em\"\n      },\n      onChange: this.handleChange,\n      name: \"location\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      label: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      label: \"New York City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"New York City\"), React.createElement(\"option\", {\n      value: \"Los Angeles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Los Angeles\"), React.createElement(\"option\", {\n      value: \"Boston\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Boston\"), React.createElement(\"option\", {\n      value: \"Chicago\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Chicago\")), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"ui primary button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Set Up a Meeting With this Pet!\"));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMeetingToCurrentUser: meeting => {\n      dispatch({\n        type: \"ADD_MEETING_TO_CURRENT_USER\",\n        payload: meeting\n      });\n    },\n    addMeetingToCurrentPet: meeting => {\n      dispatch({\n        type: \"ADD_MEETING_TO_CURRENT_PET\",\n        payload: meeting\n      });\n    }\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    currentPet: state.currentPet\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateMeetingCard);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/components/CreateMeetingCard.js"],"names":["React","connect","CreateMeetingCard","Component","state","datetime","location","handleChange","e","setState","target","name","value","handleClick","createMeeting","fetch","method","headers","body","JSON","stringify","adopter_id","props","currentUser","id","pet_id","currentPet","then","res","json","meeting","errors","alert","pet_img_url","img_url","pet","adopter_img_url","adopter","addMeetingToCurrentUser","addMeetingToCurrentPet","render","position","color","padding","margin","mapDispatchToProps","dispatch","type","payload","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\n\nclass CreateMeetingCard extends React.Component {\n\n  state = {\n    datetime: \"\",\n    location: \"\"\n  }\n\n\n\n    handleChange = (e) => {\n      this.setState({\n        [e.target.name]: e.target.value\n      })\n    }\n\n    handleClick = ()=> {\n      this.createMeeting()\n    }\n\n    createMeeting = () => {\n\n      fetch(\"http://localhost:4000/api/v1/meetings\", {\n        method: \"POST\",\n        headers:{\n    'Content-Type': 'application/json'\n                },\n        body: JSON.stringify({\n          adopter_id: this.props.currentUser.id,\n          pet_id: this.props.currentPet.id,\n          datetime: this.state.datetime,\n          location: this.state.location\n        })\n      })\n      .then(res=>res.json())\n      .then(meeting => {\n        if(meeting.errors){\n          alert(meeting.errors)\n          }\n        else {\n        meeting.pet_img_url = this.props.currentPet.img_url\n        meeting.pet = this.props.currentPet.name\n        meeting.adopter_img_url = this.props.currentUser.img_url\n        meeting.adopter = this.props.currentUser.name\n\n        this.props.addMeetingToCurrentUser(meeting)\n        this.props.addMeetingToCurrentPet(meeting)\n        }\n      })\n\n    }\n\n    render(){\n      return (\n\n        <div style={{position:\"absolute\", color: \"black\", padding: \".25em\"}} className=\"ui raised card\">\n        <input style={{margin: \"0.25em\"}} onChange={this.handleChange} required type=\"date\" name=\"datetime\"/>\n        <select style={{margin: \"0.25em\"}} onChange={this.handleChange} name=\"location\" required >\n          <option label=\"Location\"></option>\n          <option label=\"New York City\">New York City</option>\n          <option value=\"Los Angeles\">Los Angeles</option>\n          <option value=\"Boston\">Boston</option>\n          <option value=\"Chicago\">Chicago</option>\n        </select>\n        <button onClick = {this.handleClick} className=\"ui primary button\">Set Up a Meeting With this Pet!</button>\n        </div>\n\n      )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMeetingToCurrentUser: (meeting) => {\n      dispatch({type: \"ADD_MEETING_TO_CURRENT_USER\", payload: meeting})\n    },\n    addMeetingToCurrentPet: (meeting) => {\n      dispatch({type: \"ADD_MEETING_TO_CURRENT_PET\", payload: meeting})\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    currentPet: state.currentPet\n  }\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps)(CreateMeetingCard)\n"]},"metadata":{},"sourceType":"module"}