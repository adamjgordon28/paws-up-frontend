{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/App.js\";\nimport React, { Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Profile from './components/profile';\nimport LoginForm from './components/Login';\nimport NavBar from './components/NavBar';\nimport PetContainer from './containers/PetContainer';\nimport PetPage from './containers/PetPage';\nimport CreatePetForm from './containers/CreatePetForm';\nimport CreateAdopterForm from './containers/CreateAdopterForm';\nimport AdopterProfile from './components/AdopterProfile';\nimport About from './components/About';\nimport './App.css';\n\nconst App = props => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    currentAdopter: this.state.currentAdopter,\n    location: this.props.location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => React.createElement(Redirect, {\n      to: \"/pets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/profile\",\n    component: AdopterProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: LoginForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    component: CreateAdopterForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/logout\",\n    render: () => React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/pets\",\n    component: PetPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/newpet\",\n    component: CreatePetForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n};\n\nexport default withRouter(App); // class App extends React.Component {\n//\n//     state = {\n//       currentAdopter: null\n//     }\n//\n//     logOut = () => {\n//     localStorage.removeItem(\"token\")\n//     this.setCurrentAdopter(-1)\n//     return <Redirect to=\"/login\"/>\n//   }\n//\n//     componentDidMount() {\n//     const token = localStorage.getItem(\"token\")\n//\n//     if (token) {\n//       fetch(\"http://localhost:4000/api/v1/auto_login\", {\n//         headers: {\n//           \"Authorization\": token\n//         }\n//\n//       })\n//       .then(res => res.json())\n//       .then((adopter) => {\n//         if (adopter.errors) {\n//           this.setCurrentAdopter(-1)\n//           alert(adopter.errors)\n//           this.logOut()\n//         } else {\n//           this.setCurrentAdopter(adopter)\n//         }\n//       })\n//     }\n//\n//     else {\n//       this.props.history.push(\"/login\")\n//     }\n//   }\n//\n//   createPet = (pet)=> {\n//     fetch(\"http://localhost:4000/api/v1/pets\",{\n//       method: \"POST\",\n//       headers: {\"Content-Type\": \"application/json\", Accepts: \"application/json\"},\n//       body: JSON.stringify(pet)\n//     })\n//     .then(res=>res.json())\n//     .then(data => {\n//      return this.props.history.push(\"/\")\n//     })\n//\n//   }\n//\n\nlet createAdopter = adopter => {\n  fetch(\"http://localhost:4000/api/v1/adopters\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accepts: \"application/json\"\n    },\n    body: JSON.stringify({\n      name: adopter.name,\n      username: adopter.username,\n      password: adopter.password,\n      age: adopter.age,\n      location: adopter.location,\n      residence_type: adopter.residence_type,\n      allergy: adopter.allergy,\n      other_pets: adopter.other_pets,\n      img_url: adopter.img_url\n    })\n  }).then(res => {\n    res.json();\n  }).then(response => {\n    if (response.error) {\n      alert(response.error);\n    } else {\n      localStorage.setItem(\"token\", response.token);\n      this.setCurrentAdopter(response.adopter);\n    }\n  });\n}; //\n//   setCurrentAdopter = (adopter) => {\n//       this.setState({\n//         currentAdopter:adopter\n//       }, ()=> {\n//         if (localStorage.token){this.props.history.push(\"/adopter-profile\")\n//       }\n//       })\n//   }\n//\n//\n//   render(){\n//     return (\n//       <div className=\"App\">\n//       <NavBar currentAdopter={this.state.currentAdopter} location={this.props.location}/>\n//         <header className=\"App-header\">\n//         {this.props.history.location.pathname===\"/\"? <Header/>:\" \"}\n//         <Switch>\n//         <Route exact path ='/' render = {(routeProps)=>\n//           <PetPage {...routeProps} currentAdopter={this.state.currentAdopter}/>} />\n//             <Route exact path = '/new-pet' render={(routeProps) => <CreatePetForm createPet = {this.createPet} {...routeProps}/>}/>\n//             <Route exact path = '/about' render={(routeProps) => <About {...routeProps}/> }/>\n//             <Route exact path = '/signup' render={(routeProps) => <CreateAdopterForm {...routeProps} createAdopter = {this.createAdopter}/>}/>\n//             <Route exact path = '/login' render={(routeProps) => <Login {...routeProps} setCurrentAdopter={this.setCurrentAdopter}/>}/>\n//             <Route exact path = '/adopter-profile' render={(routeProps) => <AdopterProfile {...routeProps} currentAdopter={this.state.currentAdopter} /> }/>\n//             <Route exact path ='/logout' render = {(routeProps) => <Logout logOut = {this.logOut} {...routeProps}/>}/>\n//\n//         </Switch>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n//\n// export default App;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/App.js"],"names":["React","Fragment","Route","Switch","Redirect","withRouter","Profile","LoginForm","NavBar","PetContainer","PetPage","CreatePetForm","CreateAdopterForm","AdopterProfile","About","App","props","state","currentAdopter","location","createAdopter","adopter","fetch","method","headers","Accepts","body","JSON","stringify","name","username","password","age","residence_type","allergy","other_pets","img_url","then","res","json","response","error","alert","localStorage","setItem","token","setCurrentAdopter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,WAAP;;AAGA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,cAAnC;AAAmD,IAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,SAAS,EAAEN,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEN,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAEK,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAEF,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAEC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,CADF;AAeD,CAhBD;;AAkBA,eAAeT,UAAU,CAACU,GAAD,CAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,IAAIK,aAAa,GAAIC,OAAD,IAAY;AAC9BC,EAAAA,KAAK,CAAC,uCAAD,EAAyC;AAC5CC,IAAAA,MAAM,EAAE,MADoC;AAE5CC,IAAAA,OAAO,EAAE;AAAC,sBAAgB,kBAAjB;AAAqCC,MAAAA,OAAO,EAAE;AAA9C,KAFmC;AAG5CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,MAAAA,IAAI,EAAER,OAAO,CAACQ,IAAf;AACnBC,MAAAA,QAAQ,EAAET,OAAO,CAACS,QADC;AAEnBC,MAAAA,QAAQ,EAAEV,OAAO,CAACU,QAFC;AAGnBC,MAAAA,GAAG,EAAEX,OAAO,CAACW,GAHM;AAInBb,MAAAA,QAAQ,EAAEE,OAAO,CAACF,QAJC;AAKnBc,MAAAA,cAAc,EAAEZ,OAAO,CAACY,cALL;AAMnBC,MAAAA,OAAO,EAAEb,OAAO,CAACa,OANE;AAOnBC,MAAAA,UAAU,EAAEd,OAAO,CAACc,UAPD;AAQnBC,MAAAA,OAAO,EAAEf,OAAO,CAACe;AARE,KAAf;AAHsC,GAAzC,CAAL,CAaCC,IAbD,CAaMC,GAAG,IAAE;AAACA,IAAAA,GAAG,CAACC,IAAJ;AAAW,GAbvB,EAcCF,IAdD,CAcMG,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,KAAb,EAAmB;AACbC,MAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,KAFL,MAGK;AACLE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,QAAQ,CAACK,KAAvC;AACA,WAAKC,iBAAL,CAAuBN,QAAQ,CAACnB,OAAhC;AACC;AACF,GAtBD;AAwBD,CAzBD,C,CA0BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Fragment } from 'react'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport Profile from './components/profile'\nimport LoginForm from './components/Login'\nimport NavBar from './components/NavBar'\nimport PetContainer from './containers/PetContainer'\nimport PetPage from './containers/PetPage'\nimport CreatePetForm from './containers/CreatePetForm'\nimport CreateAdopterForm from './containers/CreateAdopterForm'\nimport AdopterProfile from './components/AdopterProfile'\nimport About from './components/About'\n\nimport './App.css'\n\n\nconst App = props => {\n  return (\n    <Fragment>\n      <NavBar currentAdopter={this.state.currentAdopter} location={this.props.location}/>\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/pets\" />} />\n        <Route exact path=\"/profile\" component={AdopterProfile} />\n        <Route exact path=\"/login\" component={LoginForm} />\n        <Route exact path=\"/signup\" component={CreateAdopterForm} />\n        <Route exact path=\"/logout\" render={() => <Redirect to=\"/\" />} />\n        <Route exact path=\"/pets\" component={PetPage}/>\n        <Route exact path=\"/newpet\" component={CreatePetForm} />\n        <Route exact path=\"/about\" component={About}/>\n      </Switch>\n    </Fragment>\n  )\n}\n\nexport default withRouter(App)\n\n// class App extends React.Component {\n//\n//     state = {\n//       currentAdopter: null\n//     }\n//\n//     logOut = () => {\n//     localStorage.removeItem(\"token\")\n//     this.setCurrentAdopter(-1)\n//     return <Redirect to=\"/login\"/>\n//   }\n//\n//     componentDidMount() {\n//     const token = localStorage.getItem(\"token\")\n//\n//     if (token) {\n//       fetch(\"http://localhost:4000/api/v1/auto_login\", {\n//         headers: {\n//           \"Authorization\": token\n//         }\n//\n//       })\n//       .then(res => res.json())\n//       .then((adopter) => {\n//         if (adopter.errors) {\n//           this.setCurrentAdopter(-1)\n//           alert(adopter.errors)\n//           this.logOut()\n//         } else {\n//           this.setCurrentAdopter(adopter)\n//         }\n//       })\n//     }\n//\n//     else {\n//       this.props.history.push(\"/login\")\n//     }\n//   }\n//\n//   createPet = (pet)=> {\n//     fetch(\"http://localhost:4000/api/v1/pets\",{\n//       method: \"POST\",\n//       headers: {\"Content-Type\": \"application/json\", Accepts: \"application/json\"},\n//       body: JSON.stringify(pet)\n//     })\n//     .then(res=>res.json())\n//     .then(data => {\n//      return this.props.history.push(\"/\")\n//     })\n//\n//   }\n//\n  let createAdopter = (adopter)=> {\n    fetch(\"http://localhost:4000/api/v1/adopters\",{\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\", Accepts: \"application/json\"},\n      body: JSON.stringify({name: adopter.name,\n        username: adopter.username,\n        password: adopter.password,\n        age: adopter.age,\n        location: adopter.location,\n        residence_type: adopter.residence_type,\n        allergy: adopter.allergy,\n        other_pets: adopter.other_pets,\n        img_url: adopter.img_url})\n    })\n    .then(res=>{res.json()})\n    .then(response => {\n      if (response.error){\n            alert(response.error)\n          }\n      else {\n      localStorage.setItem(\"token\", response.token)\n      this.setCurrentAdopter(response.adopter)\n      }\n    })\n\n  }\n//\n//   setCurrentAdopter = (adopter) => {\n//       this.setState({\n//         currentAdopter:adopter\n//       }, ()=> {\n//         if (localStorage.token){this.props.history.push(\"/adopter-profile\")\n//       }\n//       })\n//   }\n//\n//\n//   render(){\n//     return (\n//       <div className=\"App\">\n//       <NavBar currentAdopter={this.state.currentAdopter} location={this.props.location}/>\n//         <header className=\"App-header\">\n//         {this.props.history.location.pathname===\"/\"? <Header/>:\" \"}\n//         <Switch>\n//         <Route exact path ='/' render = {(routeProps)=>\n//           <PetPage {...routeProps} currentAdopter={this.state.currentAdopter}/>} />\n//             <Route exact path = '/new-pet' render={(routeProps) => <CreatePetForm createPet = {this.createPet} {...routeProps}/>}/>\n//             <Route exact path = '/about' render={(routeProps) => <About {...routeProps}/> }/>\n//             <Route exact path = '/signup' render={(routeProps) => <CreateAdopterForm {...routeProps} createAdopter = {this.createAdopter}/>}/>\n//             <Route exact path = '/login' render={(routeProps) => <Login {...routeProps} setCurrentAdopter={this.setCurrentAdopter}/>}/>\n//             <Route exact path = '/adopter-profile' render={(routeProps) => <AdopterProfile {...routeProps} currentAdopter={this.state.currentAdopter} /> }/>\n//             <Route exact path ='/logout' render = {(routeProps) => <Logout logOut = {this.logOut} {...routeProps}/>}/>\n//\n//         </Switch>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n//\n// export default App;\n"]},"metadata":{},"sourceType":"module"}