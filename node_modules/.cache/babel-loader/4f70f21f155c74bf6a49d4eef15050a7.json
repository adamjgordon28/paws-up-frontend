{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/App.js\";\nimport React from 'react';\nimport PetPage from './containers/PetPage.js';\nimport CreateAdopterForm from './containers/CreateAdopterForm.js';\nimport About from './components/About.js';\nimport CreatePetForm from './containers/CreatePetForm.js';\nimport AdopterProfile from './components/AdopterProfile.js';\nimport NavBar from './components/NavBar.js';\nimport Header from './components/Header.js';\nimport PetContainer from './containers/PetContainer.js';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './components/Login.js';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null\n    };\n\n    this.filterPets = array => {\n      let firstArray;\n      let secondArray;\n      let finalArray;\n\n      if (this.state.animalFilter) {\n        let animalFilteredPets = array.filter(pet => {\n          return pet.animal === this.state.animalFilter;\n        });\n        firstArray = animalFilteredPets;\n      } else {\n        firstArray = array;\n      }\n\n      if (this.state.sizeFilter) {\n        let sizeFilteredPets = firstArray.filter(pet => {\n          return pet.size === this.state.sizeFilter;\n        });\n        secondArray = sizeFilteredPets;\n      } else {\n        secondArray = firstArray;\n      }\n\n      if (this.state.sexFilter) {\n        let sexFilteredPets = secondArray.filter(pet => {\n          return pet.sex === this.state.sexFilter;\n        });\n        finalArray = sexFilteredPets;\n      } else {\n        finalArray = secondArray;\n      }\n\n      return finalArray;\n    };\n\n    this.fetchPets = () => {\n      fetch(\"http://localhost:4000/api/v1/pets\").then(res => res.json()).then(pets => {\n        this.setState({\n          pets: pets\n        });\n      });\n    };\n\n    this.setSelectedPet = pet => {\n      this.setState({\n        selectedPetId: pet.id\n      });\n    };\n\n    this.createPet = pet => {\n      fetch(\"http://localhost:4000/api/v1/pets\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accepts: \"application/json\"\n        },\n        body: JSON.stringify(pet)\n      }).then(res => res.json()).then(data => {\n        return this.props.history.push(\"/\");\n      });\n    };\n\n    this.createAdopter = adopter => {\n      fetch(\"http://localhost:4000/api/v1/adopters\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accepts: \"application/json\"\n        },\n        body: JSON.stringify({\n          name: adopter.name,\n          age: adopter.age,\n          location: adopter.location,\n          residence_type: adopter.residence_type,\n          allergy: adopter.allergy,\n          other_pets: adopter.other_pets,\n          img_url: adopter.img_url\n        })\n      }).then(res => res.json()).then(data => {\n        return this.props.history.push(\"/adopter-profile\");\n      });\n    };\n\n    this.fetchAndSetAdopters = () => {\n      fetch(\"http://localhost:4000/api/v1/adopters/21\").then(res => res.json()).then(user => {\n        this.setState({\n          currentUser: user\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchPets();\n  }\n\n  componentDidMount() {\n    this.fetchAndSetAdopters();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(PetPage, {\n        fetchAndSetAdopters: this.fetchAndSetAdopters,\n        currentUser: this.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/pets\",\n      render: () => React.createElement(PetContainer, {\n        pets: this.filterPets(this.state.pets),\n        setSelectedPet: this.setSelectedPet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/new-pet\",\n      render: routeProps => React.createElement(CreatePetForm, Object.assign({\n        createPet: this.createPet\n      }, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      render: routeProps => React.createElement(About, Object.assign({}, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: routeProps => React.createElement(CreateAdopterForm, Object.assign({}, routeProps, {\n        createAdopter: this.createAdopter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routeProps => React.createElement(Login, Object.assign({}, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/adopter-profile\",\n      render: routeProps => React.createElement(AdopterProfile, Object.assign({}, routeProps, {\n        currentUser: this.state.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/Mod-4/project/paws-up-frontend/paws-up-client/src/App.js"],"names":["React","PetPage","CreateAdopterForm","About","CreatePetForm","AdopterProfile","NavBar","Header","PetContainer","Route","Switch","Redirect","Login","App","Component","state","currentUser","filterPets","array","firstArray","secondArray","finalArray","animalFilter","animalFilteredPets","filter","pet","animal","sizeFilter","sizeFilteredPets","size","sexFilter","sexFilteredPets","sex","fetchPets","fetch","then","res","json","pets","setState","setSelectedPet","selectedPetId","id","createPet","method","headers","Accepts","body","JSON","stringify","data","props","history","push","createAdopter","adopter","name","age","location","residence_type","allergy","other_pets","img_url","fetchAndSetAdopters","user","componentDidMount","render","routeProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PetPage from './containers/PetPage.js'\nimport CreateAdopterForm from './containers/CreateAdopterForm.js'\nimport About from './components/About.js'\nimport CreatePetForm from './containers/CreatePetForm.js'\nimport AdopterProfile from './components/AdopterProfile.js'\nimport NavBar from './components/NavBar.js'\nimport Header from './components/Header.js'\nimport PetContainer from './containers/PetContainer.js'\n\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport Login from './components/Login.js';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n\n    state = {\n      currentUser: null\n    }\n\n    filterPets = (array) => {\n      let firstArray;\n      let secondArray;\n      let finalArray;\n      if (this.state.animalFilter){\n        let animalFilteredPets = array.filter((pet)=>{\n          return pet.animal === this.state.animalFilter\n        })\n        firstArray = animalFilteredPets\n      }\n      else {\n        firstArray = array\n      }\n      if (this.state.sizeFilter){\n        let sizeFilteredPets = firstArray.filter((pet)=>{\n          return pet.size === this.state.sizeFilter\n        })\n        secondArray = sizeFilteredPets\n      }\n      else {\n        secondArray = firstArray\n      }\n      if (this.state.sexFilter){\n        let sexFilteredPets = secondArray.filter((pet)=>{\n          return pet.sex === this.state.sexFilter\n        })\n        finalArray = sexFilteredPets\n      }\n      else {\n         finalArray = secondArray\n      }\n      return finalArray\n    }\n\n    fetchPets = () => {\n      fetch(\"http://localhost:4000/api/v1/pets\")\n      .then(res => res.json())\n      .then(pets => {\n        this.setState({\n          pets: pets\n        })\n      })\n    }\n\n\n\n    componentDidMount(){\n      this.fetchPets()\n    }\n\n    setSelectedPet = (pet) => {\n      this.setState({\n        selectedPetId: pet.id\n      })\n    }\n\n  createPet = (pet)=> {\n    fetch(\"http://localhost:4000/api/v1/pets\",{\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\", Accepts: \"application/json\"},\n      body: JSON.stringify(pet)\n    })\n    .then(res=>res.json())\n    .then(data => {\n     return this.props.history.push(\"/\")\n    })\n\n  }\n\n  createAdopter = (adopter)=> {\n    fetch(\"http://localhost:4000/api/v1/adopters\",{\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\", Accepts: \"application/json\"},\n      body: JSON.stringify({name: adopter.name,\n      age: adopter.age,\n      location: adopter.location,\n      residence_type: adopter.residence_type,\n      allergy: adopter.allergy,\n      other_pets: adopter.other_pets,\n      img_url: adopter.img_url})\n    })\n    .then(res=>res.json())\n    .then(data => {\n     return this.props.history.push(\"/adopter-profile\")\n    })\n\n  }\n\n  fetchAndSetAdopters = () => {\n    fetch(\"http://localhost:4000/api/v1/adopters/21\")\n    .then(res => res.json())\n    .then(user => {\n\n      this.setState({\n        currentUser:user\n      })\n    })\n\n  }\n\n  componentDidMount(){\n\n        this.fetchAndSetAdopters()\n    }\n\n  render(){\n    return (\n      <div className=\"App\">\n      <NavBar/>\n        <header className=\"App-header\">\n        <Header/>\n        <Switch>\n        <Route exact path ='/' render = {()=>\n          <PetPage fetchAndSetAdopters= {this.fetchAndSetAdopters} currentUser={this.currentUser}/>}/>\n          <Route exact path ='/pets' render = {()=>\n            <PetContainer pets = {this.filterPets(this.state.pets)} setSelectedPet = {this.setSelectedPet}/>}/>\n            <Route exact path = '/new-pet' render={(routeProps) => <CreatePetForm createPet = {this.createPet} {...routeProps}/>}/>\n            <Route exact path = '/about' render={(routeProps) => <About {...routeProps}/> }/>\n            <Route exact path = '/signup' render={(routeProps) => <CreateAdopterForm {...routeProps} createAdopter = {this.createAdopter}/>}/>\n            <Route exact path = '/login' render={(routeProps) => <Login {...routeProps} />}/>\n            <Route exact path = '/adopter-profile' render={(routeProps) => <AdopterProfile {...routeProps} currentUser={this.state.currentUser} /> }/>\n        </Switch>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}